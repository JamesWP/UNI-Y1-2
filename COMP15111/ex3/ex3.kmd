KMD
00000000: EA00004A    ;         B part1 ; part1 or part2 or part3
00000004:             ; 
00000004: 00 00 00 00 ; buffer  DEFS 100,0
00000008: 00 00 00 00 ; 
0000000C: 00 00 00 00 ; 
00000010: 00 00 00 00 ; 
00000014: 00 00 00 00 ; 
00000018: 00 00 00 00 ; 
0000001C: 00 00 00 00 ; 
00000020: 00 00 00 00 ; 
00000024: 00 00 00 00 ; 
00000028: 00 00 00 00 ; 
0000002C: 00 00 00 00 ; 
00000030: 00 00 00 00 ; 
00000034: 00 00 00 00 ; 
00000038: 00 00 00 00 ; 
0000003C: 00 00 00 00 ; 
00000040: 00 00 00 00 ; 
00000044: 00 00 00 00 ; 
00000048: 00 00 00 00 ; 
0000004C: 00 00 00 00 ; 
00000050: 00 00 00 00 ; 
00000054: 00 00 00 00 ; 
00000058: 00 00 00 00 ; 
0000005C: 00 00 00 00 ; 
00000060: 00 00 00 00 ; 
00000064: 00 00 00 00 ; 
00000068:             ; 
00000068: 6F 6E 65 00 ; s1      DEFB "one\0"
0000006C:             ;         ALIGN
0000006C: 74 77 6F 00 ; s2      DEFB "two\0"
00000070:             ;         ALIGN
00000070: 74 68 72 65 ; s3      DEFB "three\0"
00000074: 65 00       ; 
00000078:             ;         ALIGN
00000078: 66 6F 75 72 ; s4      DEFB "four\0"
0000007C: 00          ; 
00000080:             ;         ALIGN
00000080: 66 69 76 65 ; s5      DEFB "five\0"
00000084: 00          ; 
00000088:             ;         ALIGN
00000088: 73 69 78 00 ; s6      DEFB "six\0"
0000008C:             ;         ALIGN
0000008C: 73 65 76 65 ; s7      DEFB "seven\0"
00000090: 6E 00       ; 
00000094:             ;         ALIGN
00000094: 74 77 65 6E ; s8      DEFB "twentytwo\0"
00000098: 74 79 74 77 ; 
0000009C: 6F 00       ; 
000000A0:             ;         ALIGN
000000A0: 74 77 65 6E ; s9      DEFB "twenty\0"
000000A4: 74 79 00    ; 
000000A8:             ;         ALIGN
000000A8:             ; 
000000A8:             ; ;************************** part 1 **************************
000000A8:             ; printstring
000000A8: E4D10001    ;   LDRB  R0, [R1],#1
000000AC: E3500000    ;   CMP   R0, #0
000000B0: 0A000001    ;   BEQ   end1
000000B4: EF000000    ;   SVC   0
000000B8: EAFFFFFA    ;   B printstring
000000BC: E3A0000A    ; end1    MOV  R0, #10    ; given - output end-of-line
000000C0: EF000000    ;         SVC  0          ; given
000000C4: E1A0F00E    ;         MOV  PC, LR     ; given
000000C8:             ; 
000000C8:             ; ;************************** part 2 ***************************
000000C8:             ; strcat
000000C8: E4D10001    ;   LDRB  R0, [R1], #1
000000CC: E3500000    ;   CMP   R0, #0
000000D0: 1AFFFFFC    ;   BNE   strcat
000000D4: E2411001    ;   SUB   R1, R1, #1
000000D8:             ; loopcat
000000D8: E4D20001    ;   LDRB  R0, [R2], #1
000000DC: E4C10001    ;   STRB  R0, [R1], #1
000000E0: E3500000    ;   CMP   R0, #0
000000E4: 1AFFFFFB    ;   BNE   loopcat
000000E8: E1A0F00E    ;         MOV   PC, LR
000000EC:             ; 
000000EC:             ; strcpy
000000EC: E4D20001    ;   LDRB  R0, [R2],#1
000000F0: E4C10001    ;   STRB  R0, [R1],#1
000000F4: E3500000    ;   CMP   R0, #0  
000000F8: 01A0F00E    ;         MOVEQ PC, LR
000000FC: EAFFFFFA    ;   B     strcpy
00000100:             ; 
00000100:             ; ;************************** part 3 **************************
00000100: E58FE024    ; sorted  STR LR, return2 ; given
00000104:             ; 
00000104:             ; sortedloop
00000104: E4D24001    ;   LDRB  R4, [R2], #1
00000108: E4D35001    ;   LDRB  R5, [R3], #1
0000010C: E3540000    ;   CMP   R4, #0
00000110: 0A000004    ;   BEQ   done
00000114: E3550000    ;   CMP   R5, #0
00000118: 0A000002    ;   BEQ   done
0000011C: E1540005    ;   CMP   R4, R5
00000120: 1A000000    ;   BNE   done
00000124: EAFFFFF6    ;   B     sortedloop   
00000128:             ; done
00000128: E51FF004    ;         LDR   PC, return2 ; given
0000012C: 00000000    ; return2 DEFW 0          ; given
00000130:             ; 
00000130:             ; ;*********************** the various parts ********************
00000130: E24F10D0    ; part1   ADR R1, s1
00000134: EBFFFFDB    ;         BL  printstring
00000138: E24F10D4    ;         ADR R1, s2
0000013C: EBFFFFD9    ;         BL  printstring
00000140: E24F10D8    ;         ADR R1, s3
00000144: EBFFFFD7    ;         BL  printstring
00000148: E24F10D8    ;         ADR R1, s4
0000014C: EBFFFFD5    ;         BL  printstring
00000150: E24F10D8    ;         ADR R1, s5
00000154: EBFFFFD3    ;         BL  printstring
00000158: E24F10D8    ;         ADR R1, s6
0000015C: EBFFFFD1    ;         BL  printstring
00000160: E24F10DC    ;         ADR R1, s7
00000164: EBFFFFCF    ;         BL  printstring
00000168: E24F10DC    ;         ADR R1, s8
0000016C: EBFFFFCD    ;         BL  printstring
00000170: E24F10D8    ;         ADR R1, s9
00000174: EBFFFFCB    ;         BL  printstring
00000178: EF000002    ;         SVC 2
0000017C:             ; 
0000017C: E24F2F47    ; part2   ADR R2, s1
00000180: E24F1F61    ;         ADR R1, buffer
00000184: EBFFFFD8    ;         BL  strcpy
00000188: E24F1F63    ;         ADR R1, buffer
0000018C: EBFFFFC5    ;         BL  printstring
00000190: E24F2F4B    ;         ADR R2, s2
00000194: E24F1F66    ;         ADR R1, buffer
00000198: EBFFFFCA    ;         BL  strcat
0000019C: E24F1E1A    ;         ADR R1, buffer
000001A0: EBFFFFC0    ;         BL  printstring
000001A4: E24F2F4F    ;         ADR R2, s3
000001A8: E24F1F6B    ;         ADR R1, buffer
000001AC: EBFFFFC5    ;         BL  strcat
000001B0: E24F1F6D    ;         ADR R1, buffer
000001B4: EBFFFFBB    ;         BL  printstring
000001B8: EF000002    ;         SVC 2
000001BC:             ; 
000001BC:             ; ; used by part3
000001BC: 00000000    ; return4 DEFW 0,0
000001C0: 00000000    ; 
000001C4: E50FE010    ; test2   STR LR, return4
000001C8: E50F3010    ;         STR R3, return4+4       
000001CC: E1A00002    ;         MOV R0, R2
000001D0: EF000003    ;         SVC 3
000001D4: EBFFFFC9    ;         BL  sorted
000001D8: CA000004    ;         BGT gt
000001DC: E3A0003C    ;         MOV R0, #'<'
000001E0: EF000000    ;         SVC 0
000001E4: E3A0003D    ;         MOV R0, #'='
000001E8: EF000000    ;         SVC 0
000001EC: EA000001    ;         B   back
000001F0: E3A0003E    ; gt      MOV R0, #'>'
000001F4: EF000000    ;         SVC 0
000001F8: E51F0040    ; back    LDR R0, return4+4
000001FC: EF000003    ;         SVC 3
00000200: E3A0000A    ;         MOV R0, #10
00000204: EF000000    ;         SVC 0
00000208: E51FF054    ;         LDR PC, return4
0000020C:             ; 
0000020C: E24F2F6B    ; part3   ADR R2, s1
00000210: E24F3F6B    ;         ADR R3, s2
00000214: EBFFFFEA    ;         BL  test2
00000218: E24F2F6D    ;         ADR R2, s2
0000021C: E24F3F6D    ;         ADR R3, s3
00000220: EBFFFFE7    ;         BL  test2
00000224: E24F2F6F    ;         ADR R2, s3
00000228: E24F3F6E    ;         ADR R3, s4
0000022C: EBFFFFE4    ;         BL  test2
00000230: E24F2D07    ;         ADR R2, s4
00000234: E24F3F6F    ;         ADR R3, s5
00000238: EBFFFFE1    ;         BL  test2
0000023C: E24F2F71    ;         ADR R2, s5
00000240: E24F3D07    ;         ADR R3, s6
00000244: EBFFFFDE    ;         BL  test2
00000248: E24F2F72    ;         ADR R2, s6
0000024C: E24F3F72    ;         ADR R3, s7
00000250: EBFFFFDB    ;         BL  test2
00000254: E24F2E1D    ;         ADR R2, s7
00000258: E24F3F73    ;         ADR R3, s8
0000025C: EBFFFFD8    ;         BL  test2
00000260: E24F2F75    ;         ADR R2, s8
00000264: E24F3F73    ;         ADR R3, s9
00000268: EBFFFFD5    ;         BL  test2
0000026C: E24F2E1E    ;         ADR R2, s8
00000270: E24F3F79    ;         ADR R3, s8
00000274: EBFFFFD2    ;         BL  test2
00000278: EF000002    ;         SVC 2
0000027C:             ; 

Symbol Table: Labels
: buffer                            00000004  Local -- ARM
: s1                                00000068  Local -- ARM
: s2                                0000006C  Local -- ARM
: s3                                00000070  Local -- ARM
: s4                                00000078  Local -- ARM
: s5                                00000080  Local -- ARM
: s6                                00000088  Local -- ARM
: s7                                0000008C  Local -- ARM
: s8                                00000094  Local -- ARM
: s9                                000000A0  Local -- ARM
: printstring                       000000A8  Local -- ARM
: end1                              000000BC  Local -- ARM
: strcat                            000000C8  Local -- ARM
: loopcat                           000000D8  Local -- ARM
: strcpy                            000000EC  Local -- ARM
: sorted                            00000100  Local -- ARM
: sortedloop                        00000104  Local -- ARM
: done                              00000128  Local -- ARM
: return2                           0000012C  Local -- ARM
: part1                             00000130  Local -- ARM
: part2                             0000017C  Local -- ARM
: return4                           000001BC  Local -- ARM
: test2                             000001C4  Local -- ARM
: gt                                000001F0  Local -- ARM
: back                              000001F8  Local -- ARM
: part3                             0000020C  Local -- ARM
