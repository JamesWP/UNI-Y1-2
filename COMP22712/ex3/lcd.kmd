KMD
00000000:             ; ;------------------------------------------------------------------------
00000000:             ; ;            LCD Display
00000000:             ; ;           JWP 2015 - COMP227
00000000:             ; ;           VERSION 1.0
00000000:             ; ;
00000000:             ; ; prints strings on display and reacts to user input
00000000:             ; ;
00000000:             ; ;
00000000:             ; ; Last modified 28/Jan
00000000:             ; ;
00000000:             ; ;
00000000:             ; ; Known bugs: None
00000000:             ; ;
00000000:             ; ;------------------------------------------------------------------------
00000000: EA00001D    ;         B     Main
00000004:             ; 
00000004:             ; ;---------------------------
00000004:             ; ; includes
00000004:             ; ;---------------------------
00000004:             ; GET     io.s
00000004:             ; ;------------------------------------------------------------------------
00000004:             ; ;            IO Library
00000004:             ; ;           JWP 2015 - COMP227
00000004:             ; ;           VERSION 1.0
00000004:             ; ;
00000004:             ; ; contains io utilities
00000004:             ; ;
00000004:             ; ;
00000004:             ; ; Last modified 28/Jan
00000004:             ; ;
00000004:             ; ;
00000004:             ; ; Known bugs: None
00000004:             ; ;
00000004:             ; ;------------------------------------------------------------------------
00000004:             ; 
00000004:             ; 
00000004:             ; LCD_Data
00000004: 10000004    ;         DEFW  0x10000004
00000008:             ; LCD_Control
00000008: 10000000    ;         DEFW  0x10000000
0000000C:             ; ;---------------------------
0000000C:             ; ;procedure PrintChar(R0=char)
0000000C:             ; ; prints a single char on the LCD
0000000C:             ; ;---------------------------
0000000C:             ; PrintChar
0000000C: E92D4000    ;         PUSH{LR}
00000010:             ;         ;load data and control pointers        
00000010: E24F8014    ;         ADR   r8, LCD_Data
00000014: E24F9014    ;         ADR   r9, LCD_Control
00000018:             ;         ; wait for device
00000018: EB00000A    ;         BL    IOWait
0000001C:             ;         ;check char in range
0000001C:             ;         ;print char
0000001C:             ;         ;wait for device ready
0000001C: E8BD4000    ;         POP{LR}
00000020: E1A0F00E    ;         MOV   PC,LR
00000024:             ; ;---------------------------
00000024:             ; 
00000024:             ; 
00000024:             ; ;---------------------------
00000024:             ; ;procedure PrintString(R0=string-pointer)
00000024:             ; ; prints a \0 terminated string pointed to by string-pointer
00000024:             ; ;---------------------------
00000024:             ; PrintString
00000024: E92D4000    ;         PUSH{LR}
00000028:             ;         ;load char + post increment
00000028:             ;         ;check for termination char -> jump to end
00000028:             ;         ;print char
00000028:             ;         ;loop back
00000028:             ; PrintString_end
00000028: E8BD4000    ;         POP{LR}
0000002C: E1A0F00E    ;         MOV   PC,LR
00000030:             ; ;---------------------------
00000030:             ; 
00000030:             ; ;---------------------------
00000030:             ; ;procedure ClearScreen
00000030:             ; ; clears the screen and places cursor in top left corner
00000030:             ; ;---------------------------
00000030:             ; ClearScreen
00000030: E92D4000    ;         PUSH{LR}
00000034:             ;         ;load data and control pointers        
00000034: E24F8038    ;         ADR   r8, LCD_Data
00000038: E24F9038    ;         ADR   r9, LCD_Control
0000003C:             ;         ;wait for device
0000003C: EB000001    ;         BL    IOWait
00000040:             ;         ;clear screen
00000040:             ;         
00000040:             ; 
00000040: E8BD4000    ;         POP{LR}
00000044: E1A0F00E    ;         MOV   PC,LR
00000048:             ; ;---------------------------
00000048:             ; 
00000048:             ; ;---------------------------
00000048:             ; ;procedure IOWait
00000048:             ; ; waits for the io to be ready
00000048:             ; ;---------------------------
00000048:             ; IOWait
00000048: E92D0003    ;         PUSH{r0,r1}
0000004C:             ; 
0000004C:             ; IOWait_repeat
0000004C:             ;         ; set to read from control
0000004C: E3A00004    ;         MOV   r0, #4  ; read control
00000050: E5090000    ;         STR   r0, [r9]
00000054:             ;         
00000054:             ;         ; enable bus too
00000054: E3A00005    ;         MOV   r0, #5  ; read control enable
00000058: E5090000    ;         STR   r0, [r9]
0000005C:             ;     
0000005C:             ;         ; read data
0000005C: E5181000    ;         LDR   r1, [r8]      
00000060:             ;             
00000060:             ;         ; disable bus
00000060: E3A00004    ;         MOV   r0, #4  ; read control
00000064: E5090000    ;         STR   r0, [r9]
00000068:             ; 
00000068:             ;         ; test bit 7 is low else repeat
00000068: E2111080    ;         ANDS  r1, r1, #0x80
0000006C: 1AFFFFF6    ;         BNE   IOWait_repeat
00000070:             ; 
00000070: E8BD0003    ;         POP{r0,r1}
00000074: E1A0F00E    ;         MOV   PC,LR
00000078:             ; 
00000078:             ; 
00000078:             ; 
00000078:             ; ;---------------------------
00000078:             ; ; literals/globals
00000078:             ; ;---------------------------
00000078:             ; BUTTON_STATE_NONE   EQU 0
00000078:             ; BUTTON_STATE_TOP    EQU 1
00000078:             ; BUTTON_STATE_BOTTOM EQU 2
00000078: 00000000    ; G_BUTTON_FLAG DEFW 0        ; see button states above
0000007C:             ; 
0000007C:             ; 
0000007C:             ; ;---------------------------
0000007C:             ; ; main entry of program
0000007C:             ; ;
0000007C:             ; ; r1 : curent state
0000007C:             ; ;---------------------------
0000007C:             ; Main
0000007C:             ;         ;- set up stack pointer
0000007C: E28FDF57    ;         ADRL  SP, Stack_start
00000080: E28DDB01    ; 
00000084:             ; 
00000084: E3A01000    ;         MOV   r1, #0
00000088:             ; Main_loop
00000088:             ;         ; display curent message
00000088: EB000002    ;         BL    Display
0000008C:             ;         ; delay with button interupt
0000008C: EB000010    ;         BL    Delay
00000090:             ;         ; change state
00000090: EB000010    ;         BL    GetNextState
00000094: EAFFFFFB    ;         B     Main_loop
00000098:             ; 
00000098:             ; 
00000098:             ; ;---------------------------
00000098:             ; ;procedure Display(R0=state)
00000098:             ; ; sets the display to the correct message for this state
00000098:             ; ;---------------------------
00000098:             ; Display
00000098: E92D4003    ;         PUSH{r0,r1,LR}
0000009C:             ;         ; switch state and set output
0000009C:             ; 
0000009C: E3A01F45    ;         MOV   r1, #G_state0string     ; default string        
000000A0:             ; 
000000A0:             ;         ;state 0 G_state0string
000000A0: E3500000    ;         CMP   r0, #0
000000A4: 03A01F45    ;         MOVEQ r1, #G_state0string 
000000A8:             ; 
000000A8:             ;         ;state 1 G_state1string
000000A8: E3500001    ;         CMP   r0, #1
000000AC: 03A01F51    ;         MOVEQ r1, #G_state1string 
000000B0:             ; 
000000B0:             ;         ;state 2 G_state2string
000000B0: E3500002    ;         CMP   r0, #2
000000B4: 03A01F5F    ;         MOVEQ r1, #G_state2string 
000000B8:             ; 
000000B8:             ;         ;state 3 G_state3string
000000B8: E3500003    ;         CMP   r0, #3
000000BC: 03A01F6A    ;         MOVEQ r1, #G_state3string 
000000C0:             ; 
000000C0: EBFFFFDA    ;         BL    ClearScreen             ; call clear screen
000000C4:             ; 
000000C4: E1A00001    ;         MOV   r0,r1                   ; call print string
000000C8: EBFFFFD5    ;         BL    PrintString
000000CC:             ; 
000000CC: E8BD4003    ;         POP{r0,r1,LR}
000000D0: E1A0F00E    ;         MOV   PC,LR
000000D4:             ; ;---------------------------
000000D4:             ; 
000000D4:             ; ;---------------------------
000000D4:             ; ;procedure Delay(R0=state)
000000D4:             ; ; delays the correct amount for this state
000000D4:             ; ; can be interrupted with a button press
000000D4:             ; ;---------------------------
000000D4:             ; Delay
000000D4:             ;         ;PUSH{}
000000D4:             ;         ; delay for correct time
000000D4:             ;         ;POP{}
000000D4: E1A0F00E    ;         MOV   PC,LR
000000D8:             ; ;---------------------------
000000D8:             ; 
000000D8:             ; ;---------------------------
000000D8:             ; ;procedure GetNextState(R0=state OUTPUT)
000000D8:             ; ; gets the next state and returns value in r0
000000D8:             ; ;---------------------------
000000D8:             ; GetNextState
000000D8: E92D0006    ;         PUSH{r1,r2}
000000DC:             ; 
000000DC: E51F106C    ;         LDR   r1, G_BUTTON_FLAG       ; if button is none then skip .. else
000000E0: E3510000    ;         CMP   r1, #BUTTON_STATE_NONE
000000E4: 0A000005    ;         BEQ   GetNextState_next
000000E8:             ;         
000000E8: E3A02000    ;         MOV   r2, #BUTTON_STATE_NONE  ; reset flags
000000EC: E50F207C    ;         STR   r2, G_BUTTON_FLAG
000000F0:             ; 
000000F0: E3510001    ;         CMP   r1, #BUTTON_STATE_TOP   ; if button is top...
000000F4: 03A00002    ;         MOVEQ r0, #2                  ; goto state  2
000000F8: 13A00003    ;         MOVNE r0, #3                  ; else goto state 3
000000FC: EA000002    ;         B     GetNextState_end        ; return
00000100:             ; 
00000100:             ; GetNextState_next
00000100: E3500000    ;         CMP   r0, #0                  ; state 0 -> 1
00000104: 03A00001    ;         MOVEQ r0, #1                  ; state 1 -> 0 
00000108: 13A00000    ;         MOVNE r0, #0                  ; state 2 -> 0
0000010C:             ;                                       ; state 3 -> 0
0000010C:             ;         
0000010C:             ; GetNextState_end
0000010C: E8BD0006    ;         POP{r1,r2}
00000110: E1A0F00E    ;         MOV   PC,LR
00000114:             ; ;---------------------------
00000114:             ; 
00000114:             ; 
00000114:             ; G_state0string
00000114: 00000048    ;         DEFW  "Hello World",0x0
00000118: 00000065    ; 
0000011C: 0000006C    ; 
00000120: 0000006C    ; 
00000124: 0000006F    ; 
00000128: 00000020    ; 
0000012C: 00000057    ; 
00000130: 0000006F    ; 
00000134: 00000072    ; 
00000138: 0000006C    ; 
0000013C: 00000064    ; 
00000140: 00000000    ; 
00000144:             ; G_state1string
00000144: 00000048    ;         DEFW  "Hi COMP22712!",0x0
00000148: 00000069    ; 
0000014C: 00000020    ; 
00000150: 00000043    ; 
00000154: 0000004F    ; 
00000158: 0000004D    ; 
0000015C: 00000050    ; 
00000160: 00000032    ; 
00000164: 00000032    ; 
00000168: 00000037    ; 
0000016C: 00000031    ; 
00000170: 00000032    ; 
00000174: 00000021    ; 
00000178: 00000000    ; 
0000017C:             ; G_state2string
0000017C: 00000054    ;         DEFW  "Top Button",0x0
00000180: 0000006F    ; 
00000184: 00000070    ; 
00000188: 00000020    ; 
0000018C: 00000042    ; 
00000190: 00000075    ; 
00000194: 00000074    ; 
00000198: 00000074    ; 
0000019C: 0000006F    ; 
000001A0: 0000006E    ; 
000001A4: 00000000    ; 
000001A8:             ; G_state3string
000001A8: 00000042    ;         DEFW  "Bottom Button",0x0
000001AC: 0000006F    ; 
000001B0: 00000074    ; 
000001B4: 00000074    ; 
000001B8: 0000006F    ; 
000001BC: 0000006D    ; 
000001C0: 00000020    ; 
000001C4: 00000042    ; 
000001C8: 00000075    ; 
000001CC: 00000074    ; 
000001D0: 00000074    ; 
000001D4: 0000006F    ; 
000001D8: 0000006E    ; 
000001DC: 00000000    ; 
000001E0:             ; 
000001E0:             ; Stack_end
000001E0:             ;         DEFS 1024
000005E0:             ; Stack_start
000005E0:             ; 

Symbol Table: Labels
: LCD_Data                          00000004  Local -- ARM
: LCD_Control                       00000008  Local -- ARM
: PrintChar                         0000000C  Local -- ARM
: PrintString                       00000024  Local -- ARM
: PrintString_end                   00000028  Local -- ARM
: ClearScreen                       00000030  Local -- ARM
: IOWait                            00000048  Local -- ARM
: IOWait_repeat                     0000004C  Local -- ARM
: BUTTON_STATE_NONE                 00000000  Value
: BUTTON_STATE_TOP                  00000001  Value
: BUTTON_STATE_BOTTOM               00000002  Value
: G_BUTTON_FLAG                     00000078  Local -- ARM
: Main                              0000007C  Local -- ARM
: Main_loop                         00000088  Local -- ARM
: Display                           00000098  Local -- ARM
: Delay                             000000D4  Local -- ARM
: GetNextState                      000000D8  Local -- ARM
: GetNextState_next                 00000100  Local -- ARM
: GetNextState_end                  0000010C  Local -- ARM
: G_state0string                    00000114  Local -- ARM
: G_state1string                    00000144  Local -- ARM
: G_state2string                    0000017C  Local -- ARM
: G_state3string                    000001A8  Local -- ARM
: Stack_end                         000001E0  Local -- ARM
: Stack_start                       000005E0  Local -- ARM
